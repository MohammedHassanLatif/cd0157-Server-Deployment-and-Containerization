---
version: 0.2


phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo 'about to call dockerd'
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo ; sleep 1; done"
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      # Get latest stable release kubectl
      - curl -sS -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.12/2020-11-02/bin/linux/amd64/kubectl
        # Command for specific kubectl version:
        #- curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - echo `kubectl version`
      - export PATH=$PWD/:$PATH
      - python -m pip install --upgrade --force pip
      - apt-get update && apt-get -y install jq  && pip install --upgrade awscli
      - ls -l
  pre_build:
      commands:
        - pip3 install -r requirements.txt 
        - python3 -m pytest test_main.py
        - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' simple-jwt-api.yml
        - sed -i 's@JWT_SECRET_VALUE@'"$JWT_SECRET"'@' simple-jwt-api.yml
        - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
        - echo `ls -l`
        - curl -LO --insecure https://dl.k8s.io/release/v1.23.6/bin/linux/amd64/kubectl
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - docker build --tag $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - docker push $REPOSITORY_URI:$TAG
      - echo $EKS_CLUSTER_NAME
      - echo $EKS_KUBECTL_ROLE_ARN
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --role-arn $EKS_KUBECTL_ROLE_ARN
      - kubectl apply -f simple-jwt-api.yml 
      - printf '[{"name":"simple-jwt-api","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
      - curl --insecure -LO https://dl.k8s.io/release/v1.23.6/bin/linux/amd64/kubectl
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - echo $JWT_SECRET > .env
      - ls -l
      - pwd
artifacts:
  files: build.json
  discard-paths: yes  
env:
     parameter-store:         
       JWT_SECRET: JWT_SECRET
     

  # - curl -LO --insecure https://dl.k8s.io/release/v1.23.6/bin/linux/amd64/kubectl
